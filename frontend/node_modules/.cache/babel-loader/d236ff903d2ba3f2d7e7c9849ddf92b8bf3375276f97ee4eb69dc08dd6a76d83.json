{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\NODE\\\\thathwaa\\\\TRIAL PROG\\\\frontend\\\\src\\\\Components\\\\Choose\\\\Choose.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react'\n// import './Choose.css'\n// import axios from 'axios';\n\n// function Choose() {\n//   const [choose, setChoose] = useState('')\n//   const[questions, setQuestions] = useState([])\n//   const[currQuestIndex, setCurrQuestIndex] = useState(0)\n//   const[displayQuestion, setDisplayQuestion] = useState('')\n\n//   const handleSubmit = async(e) => {\n//     e.preventDefault();\n//     console.log(choose)\n//     const result = await axios.post('http://localhost:5000/questions',{choice:choose})\n//     console.log('Result : ',result)\n//     setQuestions(result.data.questions[currQuestIndex])\n\n//     console.log(questions)\n//   };\n\n//   return (\n//     <div>\n//       <div className=\"container\">\n//         <div className=\"content-div\">\n//           <form>\n//             <h2 className=\"text-center mb-5\">Business Survey</h2>\n//            \n//             <div className=\"col-lg-8 col-md-12 col-sm-12 mx-auto mb-5\">\n//               <label className=\"form-label chooseQuestion fw-bold mb-5\">Are you a restaurant owner or a supplier ?</label> <br />\n//               <div className='ownerSupplier'>\n//                 <div>\n//                   <input type='radio' name='radio' value='restaurant owner' onChange={(e) => setChoose(e.target.value)} />\n//                   <label>Restaurant Owner</label>\n//                 </div>\n//                 <div>\n//                   <input type='radio' name='radio' value='supplier' onChange={(e) => setChoose(e.target.value)} />\n//                   <label>Supplier</label>\n//                 </div>\n//               </div>\n//             </div>\n\n//             <div className=\"quiz-btn-section \">\n//               <button type='submit' className=\"btn btn-primary second-next-btn\" onClick={handleSubmit} >Next</button>\n//             </div>\n\n//           </form>\n//         </div>\n//       </div>\n//     </div>\n//   )\n// }\n\n// export default Choose\n\nimport React, { useEffect, useState } from 'react';\nimport './Choose.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Choose() {\n  _s();\n  const [choose, setChoose] = useState('');\n  const [questions, setQuestions] = useState([]);\n  const [currQuestIndex, setCurrQuestIndex] = useState(0);\n  const [isLastQuestion, setIsLastQuestion] = useState(false);\n  const [submitted, setSubmitted] = useState(false);\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        const response = await axios.post('http://localhost:5000/questions', {\n          choice: choose\n        });\n        setQuestions(response.data.questions);\n        setSubmitted(false); // Reset submitted status\n      } catch (error) {\n        console.error('Error fetching questions:', error);\n      }\n    };\n    fetchQuestions();\n  }, [choose]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    // Check if an answer is selected\n    if (choose === '') {\n      alert('Please select an answer before proceeding to the next question.');\n      return;\n    }\n    // Store answer in backend\n    await storeAnswer();\n    // Move to the next question if there are more questions available\n    if (currQuestIndex < questions.length - 1) {\n      setCurrQuestIndex(currQuestIndex + 1);\n      setChoose('');\n    } else {\n      // Handle the case when all questions are answered\n      setSubmitted(true);\n    }\n  };\n  const storeAnswer = async () => {\n    try {\n      await axios.post('http://localhost:5000/answers', {\n        answer: choose\n      });\n      console.log('Answer stored successfully');\n    } catch (error) {\n      console.error('Error storing answer:', error);\n    }\n  };\n  useEffect(() => {\n    setIsLastQuestion(currQuestIndex === questions.length - 1);\n  }, [currQuestIndex, questions]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-div\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-center mb-5\",\n            children: \"Business Survey\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), !submitted && questions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-8 col-md-12 col-sm-12 mx-auto mb-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label chooseQuestion fw-bold mb-5\",\n              children: questions[currQuestIndex].text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 116\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ownerSupplier\",\n              children: questions[currQuestIndex].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: \"radio\",\n                  value: option,\n                  onChange: e => setChoose(e.target.value),\n                  checked: choose === option\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: option\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this), !submitted && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"quiz-btn-section\",\n            children: isLastQuestion ? /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary second-next-btn\",\n              disabled: choose === '',\n              children: submitted ? 'Submitted' : 'Submit'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-primary second-next-btn\",\n              onClick: handleSubmit,\n              disabled: choose === '',\n              children: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n}\n_s(Choose, \"fT88p5ZJ4dlCdlO+OWFxN4+emoQ=\");\n_c = Choose;\nexport default Choose;\n\n// import React, { useEffect, useState } from 'react';\n// import './Choose.css';\n// import axios from 'axios';\n\n// function Choose() {\n//   const [choose, setChoose] = useState('');\n//   const [questions, setQuestions] = useState([]);\n//   const [currQuestIndex, setCurrQuestIndex] = useState(0);\n//   const [isLastQuestion, setIsLastQuestion] = useState(false);\n//   const [submitted, setSubmitted] = useState(false);\n\n//   useEffect(() => {\n//     const fetchQuestions = async () => {\n//       try {\n//         const response = await axios.post('http://localhost:5000/questions', { choice: choose });\n//         setQuestions(response.data.questions);\n//         setSubmitted(false); // Reset submitted status\n//       } catch (error) {\n//         console.error('Error fetching questions:', error);\n//       }\n//     };\n//     fetchQuestions();\n//   }, [choose]);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     // Check if an answer is selected\n//     if (choose === '') {\n//       alert('Please select an answer before proceeding to the next question.');\n//       return;\n//     }\n//     // Store answer in backend\n//     await storeAnswer();\n//     // Move to the next question if there are more questions available\n//     if (currQuestIndex < questions.length - 1) {\n//       setCurrQuestIndex(currQuestIndex + 1);\n//       setChoose('');\n//     } else {\n//       // Handle the case when all questions are answered\n//       setSubmitted(true);\n//     }\n//   };\n\n//   const storeAnswer = async () => {\n//     try {\n//       await axios.post('http://localhost:5000/answers', { answer: choose });\n//       console.log('Answer stored successfully');\n//     } catch (error) {\n//       console.error('Error storing answer:', error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     setIsLastQuestion(currQuestIndex === questions.length - 1);\n//   }, [currQuestIndex, questions]);\n\n//   return (\n//     <div>\n//       <div className=\"container\">\n//         <div className=\"content-div\">\n//           <form>\n//             <h2 className=\"text-center mb-5\">Business Survey</h2>\n//             {questions.length === 0 ? (\n//               <div className=\"col-lg-8 col-md-12 col-sm-12 mx-auto mb-5\">\n//                 <label className=\"form-label chooseQuestion fw-bold mb-5\">Are you a restaurant owner or a supplier ?</label> <br />\n//                 <div className='ownerSupplier'>\n//                   <div>\n//                     <input type='radio' name='radio' value='restaurant owner' onChange={(e) => setChoose(e.target.value)} />\n//                     <label>Restaurant Owner</label>\n//                   </div>\n//                   <div>\n//                     <input type='radio' name='radio' value='supplier' onChange={(e) => setChoose(e.target.value)} />\n//                     <label>Supplier</label>\n//                   </div>\n//                 </div>\n//               </div>\n//             ) : (\n//               <div className=\"col-lg-8 col-md-12 col-sm-12 mx-auto mb-5\">\n//                 <label className=\"form-label chooseQuestion fw-bold mb-5\">{questions[currQuestIndex].text}</label> <br />\n//                 <div className='ownerSupplier'>\n//                   {questions[currQuestIndex].options.map((option, index) => (\n//                     <div key={index}>\n//                       <input type='radio' name='radio' value={option} onChange={(e) => setChoose(e.target.value)} />\n//                       <label>{option}</label>\n//                     </div>\n//                   ))}\n//                 </div>\n//               </div>\n//             )}\n//             <div className=\"quiz-btn-section\">\n//               {isLastQuestion ? (\n//                 <button type='submit' className=\"btn btn-primary second-next-btn\" onClick={handleSubmit} disabled={submitted}>\n//                   {submitted ? 'Submitted' : 'Submit'}\n//                 </button>\n//               ) : (\n//                 <button type='submit' className=\"btn btn-primary second-next-btn\" onClick={handleSubmit} disabled={submitted}>\n//                   Next\n//                 </button>\n//               )}\n//             </div>\n//           </form>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Choose;\n\n// import React, { useEffect, useState } from 'react';\n// import './Choose.css';\n// import axios from 'axios';\n\n// function Choose() {\n//   const [choose, setChoose] = useState('');\n//   const [questions, setQuestions] = useState([]);\n//   const [currQuestIndex, setCurrQuestIndex] = useState(0);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     // Check if an answer is selected\n//     const answerSelected = choose !== '';\n//     // Move to the next question if there are more questions available and an answer is selected\n//     if (currQuestIndex < questions.length - 1 && answerSelected) {\n//       setCurrQuestIndex(currQuestIndex + 1);\n//       // Reset the selected answer\n//       setChoose('');\n//     } else {\n//       // Handle the case when no answer is selected or there are no more questions\n//       if (!answerSelected) {\n//         alert('Please select an answer before proceeding to the next question.');\n//       } else {\n//         // Handle form submission or thank you message here\n//         console.log('Form submitted');\n//       }\n//     }\n//   };\n\n//   useEffect(() => {\n//     const fetchQuestions = async () => {\n//       try {\n//         const response = await axios.post('http://localhost:5000/questions', { choice: choose });\n//         setQuestions(response.data.questions);\n//       } catch (error) {\n//         console.error('Error fetching questions:', error);\n//       }\n//     };\n//     fetchQuestions();\n//   }, [choose]);\n\n//   return (\n//     <div>\n//       <div className=\"container\">\n//         <div className=\"content-div\">\n//           <form>\n//             <h2 className=\"text-center mb-5\">Business Survey</h2>\n//             {questions.length === 0 ? (\n//               <div className=\"col-lg-8 col-md-12 col-sm-12 mx-auto mb-5\">\n//                 <label className=\"form-label chooseQuestion fw-bold mb-5\">Are you a restaurant owner or a supplier ?</label> <br />\n//                 <div className='ownerSupplier'>\n//                   <div>\n//                     <input type='radio' name='radio' value='restaurant owner' onChange={(e) => setChoose(e.target.value)} />\n//                     <label>Restaurant Owner</label>\n//                   </div>\n//                   <div>\n//                     <input type='radio' name='radio' value='supplier' onChange={(e) => setChoose(e.target.value)} />\n//                     <label>Supplier</label>\n//                   </div>\n//                 </div>\n//               </div>\n//             ) : (\n//               <div className=\"col-lg-8 col-md-12 col-sm-12 mx-auto mb-5\">\n//                 <label className=\"form-label chooseQuestion fw-bold mb-5\">{questions[currQuestIndex].text}</label> <br />\n//                 <div className='ownerSupplier'>\n//                   {questions[currQuestIndex].options.map((option, index) => (\n//                     <div key={index}>\n//                       <input type='radio' name='radio' value={option} onChange={(e) => setChoose(e.target.value)} />\n//                       <label>{option}</label>\n//                     </div>\n//                   ))}\n//                 </div>\n//               </div>\n//             )}\n//             <div className=\"quiz-btn-section \">\n//               <button type='submit' className=\"btn btn-primary second-next-btn\" onClick={handleSubmit} >Next</button>\n//             </div>\n\n//           </form>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Choose;\n\n// import React, { useEffect, useState } from 'react'\n// import './Choose.css'\n// import axios from 'axios';\n\n// function Choose() {\n//   const [choose, setChoose] = useState('')\n//   const[questions, setQuestions] = useState([])\n//   const[currQuestIndex, setCurrQuestIndex] = useState(0)\n//   const[displayQuestion, setDisplayQuestion] = useState('')\n\n//   const handleSubmit = async(e) => {\n//     e.preventDefault();\n//     console.log(choose)\n//     const result = await axios.post('http://localhost:5000/questions',{choice:choose})\n//     console.log('Result : ',result)\n//     setQuestions(result.data.questions)\n\n//   };\n//   console.log(questions)\n\n//   return (\n//     <div>\n//       <div className=\"container\">\n//         <div className=\"content-div\">\n//           <form>\n//             <h2 className=\"text-center mb-5\">Business Survey</h2>\n//             {questions.length === 0 ? (\n//             <div className=\"col-lg-8 col-md-12 col-sm-12 mx-auto mb-5\">\n//               <label className=\"form-label chooseQuestion fw-bold mb-5\">Are you a restaurant owner or a supplier ?</label> <br />\n//               <div className='ownerSupplier'>\n//                 <div>\n//                   <input type='radio' name='radio' value='restaurant owner' onChange={(e) => setChoose(e.target.value)} />\n//                   <label>Restaurant Owner</label>\n//                 </div>\n//                 <div>\n//                   <input type='radio' name='radio' value='supplier' onChange={(e) => setChoose(e.target.value)} />\n//                   <label>Supplier</label>\n//                 </div>\n//               </div>\n//             </div>\n//           ) : (\n//             <div className=\"col-lg-8 col-md-12 col-sm-12 mx-auto mb-5\">\n//               <label className=\"form-label chooseQuestion fw-bold mb-5\">{questions[currQuestIndex].text}</label> <br />\n//               <div className='ownerSupplier'>\n{/* <div>\r\n  <input type='radio' name='radio' value='restaurant owner' onChange={(e) => setChoose(e.target.value)} />\r\n  <label>hi</label>\r\n </div>\r\n <div>\r\n  <input type='radio' name='radio' value='supplier' onChange={(e) => setChoose(e.target.value)} />\r\n  <label>bii</label>\r\n </div> */}\n{/* <div className='ownerSupplier'>\r\n      {questions[currQuestIndex].options.map((option, index) => (\r\n        <div key={index}>\r\n          <input type='radio' name='radio' value={option} onChange={(e) => setChoose(e.target.value)} />\r\n          <label>{option}</label>\r\n        </div>\r\n      ))}\r\n    </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n \n            <div className=\"quiz-btn-section \">\r\n              <button type='submit' className=\"btn btn-primary second-next-btn\" onClick={handleSubmit} >Next</button>\r\n            </div>\r\n \n \n \n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n }\r\n \n export default Choose */}\nvar _c;\n$RefreshReg$(_c, \"Choose\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Choose","_s","choose","setChoose","questions","setQuestions","currQuestIndex","setCurrQuestIndex","isLastQuestion","setIsLastQuestion","submitted","setSubmitted","fetchQuestions","response","post","choice","data","error","console","handleSubmit","e","preventDefault","alert","storeAnswer","length","answer","log","children","className","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","text","options","map","option","index","type","name","value","onChange","target","checked","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/Desktop/NODE/thathwaa/TRIAL PROG/frontend/src/Components/Choose/Choose.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react'\r\n// import './Choose.css'\r\n// import axios from 'axios';\r\n\r\n// function Choose() {\r\n//   const [choose, setChoose] = useState('')\r\n//   const[questions, setQuestions] = useState([])\r\n//   const[currQuestIndex, setCurrQuestIndex] = useState(0)\r\n//   const[displayQuestion, setDisplayQuestion] = useState('')\r\n\r\n\r\n\r\n//   const handleSubmit = async(e) => {\r\n//     e.preventDefault();\r\n//     console.log(choose)\r\n//     const result = await axios.post('http://localhost:5000/questions',{choice:choose})\r\n//     console.log('Result : ',result)\r\n//     setQuestions(result.data.questions[currQuestIndex])\r\n\r\n//     console.log(questions)\r\n//   };\r\n\r\n\r\n//   return (\r\n//     <div>\r\n//       <div className=\"container\">\r\n//         <div className=\"content-div\">\r\n//           <form>\r\n//             <h2 className=\"text-center mb-5\">Business Survey</h2>\r\n//            \r\n//             <div className=\"col-lg-8 col-md-12 col-sm-12 mx-auto mb-5\">\r\n//               <label className=\"form-label chooseQuestion fw-bold mb-5\">Are you a restaurant owner or a supplier ?</label> <br />\r\n//               <div className='ownerSupplier'>\r\n//                 <div>\r\n//                   <input type='radio' name='radio' value='restaurant owner' onChange={(e) => setChoose(e.target.value)} />\r\n//                   <label>Restaurant Owner</label>\r\n//                 </div>\r\n//                 <div>\r\n//                   <input type='radio' name='radio' value='supplier' onChange={(e) => setChoose(e.target.value)} />\r\n//                   <label>Supplier</label>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n\r\n//             <div className=\"quiz-btn-section \">\r\n//               <button type='submit' className=\"btn btn-primary second-next-btn\" onClick={handleSubmit} >Next</button>\r\n//             </div>\r\n\r\n\r\n\r\n//           </form>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// export default Choose\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport './Choose.css';\r\nimport axios from 'axios';\r\n\r\nfunction Choose() {\r\n  const [choose, setChoose] = useState('');\r\n  const [questions, setQuestions] = useState([]);\r\n  const [currQuestIndex, setCurrQuestIndex] = useState(0);\r\n  const [isLastQuestion, setIsLastQuestion] = useState(false);\r\n  const [submitted, setSubmitted] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchQuestions = async () => {\r\n      try {\r\n        const response = await axios.post('http://localhost:5000/questions', { choice: choose });\r\n        setQuestions(response.data.questions);\r\n        setSubmitted(false); // Reset submitted status\r\n      } catch (error) {\r\n        console.error('Error fetching questions:', error);\r\n      }\r\n    };\r\n    fetchQuestions();\r\n  }, [choose]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    // Check if an answer is selected\r\n    if (choose === '') {\r\n      alert('Please select an answer before proceeding to the next question.');\r\n      return;\r\n    }\r\n    // Store answer in backend\r\n    await storeAnswer();\r\n    // Move to the next question if there are more questions available\r\n    if (currQuestIndex < questions.length - 1) {\r\n      setCurrQuestIndex(currQuestIndex + 1);\r\n      setChoose('');\r\n    } else {\r\n      // Handle the case when all questions are answered\r\n      setSubmitted(true);\r\n    }\r\n  };\r\n\r\n  const storeAnswer = async () => {\r\n    try {\r\n      await axios.post('http://localhost:5000/answers', { answer: choose });\r\n      console.log('Answer stored successfully');\r\n    } catch (error) {\r\n      console.error('Error storing answer:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIsLastQuestion(currQuestIndex === questions.length - 1);\r\n  }, [currQuestIndex, questions]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        <div className=\"content-div\">\r\n          <form onSubmit={handleSubmit}>\r\n            <h2 className=\"text-center mb-5\">Business Survey</h2>\r\n            {!submitted && questions.length > 0 && (\r\n              <div className=\"col-lg-8 col-md-12 col-sm-12 mx-auto mb-5\">\r\n                <label className=\"form-label chooseQuestion fw-bold mb-5\">{questions[currQuestIndex].text}</label> <br />\r\n                <div className='ownerSupplier'>\r\n                  {questions[currQuestIndex].options.map((option, index) => (\r\n                    <div key={index}>\r\n                      <input type='radio' name='radio' value={option} onChange={(e) => setChoose(e.target.value)} checked={choose === option} />\r\n                      <label>{option}</label>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n            {!submitted && (\r\n              <div className=\"quiz-btn-section\">\r\n                {isLastQuestion ? (\r\n                  <button type='submit' className=\"btn btn-primary second-next-btn\" disabled={choose === ''}>\r\n                    {submitted ? 'Submitted' : 'Submit'}\r\n                  </button>\r\n                ) : (\r\n                  <button type='button' className=\"btn btn-primary second-next-btn\" onClick={handleSubmit} disabled={choose === ''}>\r\n                    Next\r\n                  </button>\r\n                )}\r\n              </div>\r\n            )}\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Choose;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import './Choose.css';\r\n// import axios from 'axios';\r\n\r\n// function Choose() {\r\n//   const [choose, setChoose] = useState('');\r\n//   const [questions, setQuestions] = useState([]);\r\n//   const [currQuestIndex, setCurrQuestIndex] = useState(0);\r\n//   const [isLastQuestion, setIsLastQuestion] = useState(false);\r\n//   const [submitted, setSubmitted] = useState(false);\r\n\r\n//   useEffect(() => {\r\n//     const fetchQuestions = async () => {\r\n//       try {\r\n//         const response = await axios.post('http://localhost:5000/questions', { choice: choose });\r\n//         setQuestions(response.data.questions);\r\n//         setSubmitted(false); // Reset submitted status\r\n//       } catch (error) {\r\n//         console.error('Error fetching questions:', error);\r\n//       }\r\n//     };\r\n//     fetchQuestions();\r\n//   }, [choose]);\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     // Check if an answer is selected\r\n//     if (choose === '') {\r\n//       alert('Please select an answer before proceeding to the next question.');\r\n//       return;\r\n//     }\r\n//     // Store answer in backend\r\n//     await storeAnswer();\r\n//     // Move to the next question if there are more questions available\r\n//     if (currQuestIndex < questions.length - 1) {\r\n//       setCurrQuestIndex(currQuestIndex + 1);\r\n//       setChoose('');\r\n//     } else {\r\n//       // Handle the case when all questions are answered\r\n//       setSubmitted(true);\r\n//     }\r\n//   };\r\n\r\n//   const storeAnswer = async () => {\r\n//     try {\r\n//       await axios.post('http://localhost:5000/answers', { answer: choose });\r\n//       console.log('Answer stored successfully');\r\n//     } catch (error) {\r\n//       console.error('Error storing answer:', error);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     setIsLastQuestion(currQuestIndex === questions.length - 1);\r\n//   }, [currQuestIndex, questions]);\r\n\r\n//   return (\r\n//     <div>\r\n//       <div className=\"container\">\r\n//         <div className=\"content-div\">\r\n//           <form>\r\n//             <h2 className=\"text-center mb-5\">Business Survey</h2>\r\n//             {questions.length === 0 ? (\r\n//               <div className=\"col-lg-8 col-md-12 col-sm-12 mx-auto mb-5\">\r\n//                 <label className=\"form-label chooseQuestion fw-bold mb-5\">Are you a restaurant owner or a supplier ?</label> <br />\r\n//                 <div className='ownerSupplier'>\r\n//                   <div>\r\n//                     <input type='radio' name='radio' value='restaurant owner' onChange={(e) => setChoose(e.target.value)} />\r\n//                     <label>Restaurant Owner</label>\r\n//                   </div>\r\n//                   <div>\r\n//                     <input type='radio' name='radio' value='supplier' onChange={(e) => setChoose(e.target.value)} />\r\n//                     <label>Supplier</label>\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n//             ) : (\r\n//               <div className=\"col-lg-8 col-md-12 col-sm-12 mx-auto mb-5\">\r\n//                 <label className=\"form-label chooseQuestion fw-bold mb-5\">{questions[currQuestIndex].text}</label> <br />\r\n//                 <div className='ownerSupplier'>\r\n//                   {questions[currQuestIndex].options.map((option, index) => (\r\n//                     <div key={index}>\r\n//                       <input type='radio' name='radio' value={option} onChange={(e) => setChoose(e.target.value)} />\r\n//                       <label>{option}</label>\r\n//                     </div>\r\n//                   ))}\r\n//                 </div>\r\n//               </div>\r\n//             )}\r\n//             <div className=\"quiz-btn-section\">\r\n//               {isLastQuestion ? (\r\n//                 <button type='submit' className=\"btn btn-primary second-next-btn\" onClick={handleSubmit} disabled={submitted}>\r\n//                   {submitted ? 'Submitted' : 'Submit'}\r\n//                 </button>\r\n//               ) : (\r\n//                 <button type='submit' className=\"btn btn-primary second-next-btn\" onClick={handleSubmit} disabled={submitted}>\r\n//                   Next\r\n//                 </button>\r\n//               )}\r\n//             </div>\r\n//           </form>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Choose;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import './Choose.css';\r\n// import axios from 'axios';\r\n\r\n// function Choose() {\r\n//   const [choose, setChoose] = useState('');\r\n//   const [questions, setQuestions] = useState([]);\r\n//   const [currQuestIndex, setCurrQuestIndex] = useState(0);\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     // Check if an answer is selected\r\n//     const answerSelected = choose !== '';\r\n//     // Move to the next question if there are more questions available and an answer is selected\r\n//     if (currQuestIndex < questions.length - 1 && answerSelected) {\r\n//       setCurrQuestIndex(currQuestIndex + 1);\r\n//       // Reset the selected answer\r\n//       setChoose('');\r\n//     } else {\r\n//       // Handle the case when no answer is selected or there are no more questions\r\n//       if (!answerSelected) {\r\n//         alert('Please select an answer before proceeding to the next question.');\r\n//       } else {\r\n//         // Handle form submission or thank you message here\r\n//         console.log('Form submitted');\r\n//       }\r\n//     }\r\n//   };\r\n  \r\n\r\n//   useEffect(() => {\r\n//     const fetchQuestions = async () => {\r\n//       try {\r\n//         const response = await axios.post('http://localhost:5000/questions', { choice: choose });\r\n//         setQuestions(response.data.questions);\r\n//       } catch (error) {\r\n//         console.error('Error fetching questions:', error);\r\n//       }\r\n//     };\r\n//     fetchQuestions();\r\n//   }, [choose]);\r\n\r\n//   return (\r\n//     <div>\r\n//       <div className=\"container\">\r\n//         <div className=\"content-div\">\r\n//           <form>\r\n//             <h2 className=\"text-center mb-5\">Business Survey</h2>\r\n//             {questions.length === 0 ? (\r\n//               <div className=\"col-lg-8 col-md-12 col-sm-12 mx-auto mb-5\">\r\n//                 <label className=\"form-label chooseQuestion fw-bold mb-5\">Are you a restaurant owner or a supplier ?</label> <br />\r\n//                 <div className='ownerSupplier'>\r\n//                   <div>\r\n//                     <input type='radio' name='radio' value='restaurant owner' onChange={(e) => setChoose(e.target.value)} />\r\n//                     <label>Restaurant Owner</label>\r\n//                   </div>\r\n//                   <div>\r\n//                     <input type='radio' name='radio' value='supplier' onChange={(e) => setChoose(e.target.value)} />\r\n//                     <label>Supplier</label>\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n//             ) : (\r\n//               <div className=\"col-lg-8 col-md-12 col-sm-12 mx-auto mb-5\">\r\n//                 <label className=\"form-label chooseQuestion fw-bold mb-5\">{questions[currQuestIndex].text}</label> <br />\r\n//                 <div className='ownerSupplier'>\r\n//                   {questions[currQuestIndex].options.map((option, index) => (\r\n//                     <div key={index}>\r\n//                       <input type='radio' name='radio' value={option} onChange={(e) => setChoose(e.target.value)} />\r\n//                       <label>{option}</label>\r\n//                     </div>\r\n//                   ))}\r\n//                 </div>\r\n//               </div>\r\n//             )}\r\n//             <div className=\"quiz-btn-section \">\r\n//               <button type='submit' className=\"btn btn-primary second-next-btn\" onClick={handleSubmit} >Next</button>\r\n//             </div>\r\n\r\n//           </form>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Choose;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useEffect, useState } from 'react'\r\n// import './Choose.css'\r\n// import axios from 'axios';\r\n\r\n// function Choose() {\r\n//   const [choose, setChoose] = useState('')\r\n//   const[questions, setQuestions] = useState([])\r\n//   const[currQuestIndex, setCurrQuestIndex] = useState(0)\r\n//   const[displayQuestion, setDisplayQuestion] = useState('')\r\n\r\n\r\n\r\n//   const handleSubmit = async(e) => {\r\n//     e.preventDefault();\r\n//     console.log(choose)\r\n//     const result = await axios.post('http://localhost:5000/questions',{choice:choose})\r\n//     console.log('Result : ',result)\r\n//     setQuestions(result.data.questions)\r\n\r\n//   };\r\n//   console.log(questions)\r\n\r\n\r\n//   return (\r\n//     <div>\r\n//       <div className=\"container\">\r\n//         <div className=\"content-div\">\r\n//           <form>\r\n//             <h2 className=\"text-center mb-5\">Business Survey</h2>\r\n//             {questions.length === 0 ? (\r\n//             <div className=\"col-lg-8 col-md-12 col-sm-12 mx-auto mb-5\">\r\n//               <label className=\"form-label chooseQuestion fw-bold mb-5\">Are you a restaurant owner or a supplier ?</label> <br />\r\n//               <div className='ownerSupplier'>\r\n//                 <div>\r\n//                   <input type='radio' name='radio' value='restaurant owner' onChange={(e) => setChoose(e.target.value)} />\r\n//                   <label>Restaurant Owner</label>\r\n//                 </div>\r\n//                 <div>\r\n//                   <input type='radio' name='radio' value='supplier' onChange={(e) => setChoose(e.target.value)} />\r\n//                   <label>Supplier</label>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//           ) : (\r\n//             <div className=\"col-lg-8 col-md-12 col-sm-12 mx-auto mb-5\">\r\n//               <label className=\"form-label chooseQuestion fw-bold mb-5\">{questions[currQuestIndex].text}</label> <br />\r\n//               <div className='ownerSupplier'>\r\n                {/* <div>\r\n                  <input type='radio' name='radio' value='restaurant owner' onChange={(e) => setChoose(e.target.value)} />\r\n                  <label>hi</label>\r\n                </div>\r\n                <div>\r\n                  <input type='radio' name='radio' value='supplier' onChange={(e) => setChoose(e.target.value)} />\r\n                  <label>bii</label>\r\n                </div> */}\r\n\r\n{/* <div className='ownerSupplier'>\r\n      {questions[currQuestIndex].options.map((option, index) => (\r\n        <div key={index}>\r\n          <input type='radio' name='radio' value={option} onChange={(e) => setChoose(e.target.value)} />\r\n          <label>{option}</label>\r\n        </div>\r\n      ))}\r\n    </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n            <div className=\"quiz-btn-section \">\r\n              <button type='submit' className=\"btn btn-primary second-next-btn\" onClick={handleSubmit} >Next</button>\r\n            </div>\r\n\r\n\r\n\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Choose */}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AASA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,cAAc;AACrB,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACU,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAACY,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAEjDD,SAAS,CAAC,MAAM;IACd,MAAMiB,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,IAAI,CAAC,iCAAiC,EAAE;UAAEC,MAAM,EAAEb;QAAO,CAAC,CAAC;QACxFG,YAAY,CAACQ,QAAQ,CAACG,IAAI,CAACZ,SAAS,CAAC;QACrCO,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;MACvB,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IACDL,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACV,MAAM,CAAC,CAAC;EAEZ,MAAMiB,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB;IACA,IAAInB,MAAM,KAAK,EAAE,EAAE;MACjBoB,KAAK,CAAC,iEAAiE,CAAC;MACxE;IACF;IACA;IACA,MAAMC,WAAW,CAAC,CAAC;IACnB;IACA,IAAIjB,cAAc,GAAGF,SAAS,CAACoB,MAAM,GAAG,CAAC,EAAE;MACzCjB,iBAAiB,CAACD,cAAc,GAAG,CAAC,CAAC;MACrCH,SAAS,CAAC,EAAE,CAAC;IACf,CAAC,MAAM;MACL;MACAQ,YAAY,CAAC,IAAI,CAAC;IACpB;EACF,CAAC;EAED,MAAMY,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAM1B,KAAK,CAACiB,IAAI,CAAC,+BAA+B,EAAE;QAAEW,MAAM,EAAEvB;MAAO,CAAC,CAAC;MACrEgB,OAAO,CAACQ,GAAG,CAAC,4BAA4B,CAAC;IAC3C,CAAC,CAAC,OAAOT,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAEDtB,SAAS,CAAC,MAAM;IACdc,iBAAiB,CAACH,cAAc,KAAKF,SAAS,CAACoB,MAAM,GAAG,CAAC,CAAC;EAC5D,CAAC,EAAE,CAAClB,cAAc,EAAEF,SAAS,CAAC,CAAC;EAE/B,oBACEL,OAAA;IAAA4B,QAAA,eACE5B,OAAA;MAAK6B,SAAS,EAAC,WAAW;MAAAD,QAAA,eACxB5B,OAAA;QAAK6B,SAAS,EAAC,aAAa;QAAAD,QAAA,eAC1B5B,OAAA;UAAM8B,QAAQ,EAAEV,YAAa;UAAAQ,QAAA,gBAC3B5B,OAAA;YAAI6B,SAAS,EAAC,kBAAkB;YAAAD,QAAA,EAAC;UAAe;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EACpD,CAACvB,SAAS,IAAIN,SAAS,CAACoB,MAAM,GAAG,CAAC,iBACjCzB,OAAA;YAAK6B,SAAS,EAAC,2CAA2C;YAAAD,QAAA,gBACxD5B,OAAA;cAAO6B,SAAS,EAAC,wCAAwC;cAAAD,QAAA,EAAEvB,SAAS,CAACE,cAAc,CAAC,CAAC4B;YAAI;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,eAAAlC,OAAA;cAAA+B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACzGlC,OAAA;cAAK6B,SAAS,EAAC,eAAe;cAAAD,QAAA,EAC3BvB,SAAS,CAACE,cAAc,CAAC,CAAC6B,OAAO,CAACC,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACnDvC,OAAA;gBAAA4B,QAAA,gBACE5B,OAAA;kBAAOwC,IAAI,EAAC,OAAO;kBAACC,IAAI,EAAC,OAAO;kBAACC,KAAK,EAAEJ,MAAO;kBAACK,QAAQ,EAAGtB,CAAC,IAAKjB,SAAS,CAACiB,CAAC,CAACuB,MAAM,CAACF,KAAK,CAAE;kBAACG,OAAO,EAAE1C,MAAM,KAAKmC;gBAAO;kBAAAP,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,eAC1HlC,OAAA;kBAAA4B,QAAA,EAAQU;gBAAM;kBAAAP,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA,GAFfK,KAAK;gBAAAR,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAGV,CACN;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CACN,EACA,CAACvB,SAAS,iBACTX,OAAA;YAAK6B,SAAS,EAAC,kBAAkB;YAAAD,QAAA,EAC9BnB,cAAc,gBACbT,OAAA;cAAQwC,IAAI,EAAC,QAAQ;cAACX,SAAS,EAAC,iCAAiC;cAACiB,QAAQ,EAAE3C,MAAM,KAAK,EAAG;cAAAyB,QAAA,EACvFjB,SAAS,GAAG,WAAW,GAAG;YAAQ;cAAAoB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7B,CAAC,gBAETlC,OAAA;cAAQwC,IAAI,EAAC,QAAQ;cAACX,SAAS,EAAC,iCAAiC;cAACkB,OAAO,EAAE3B,YAAa;cAAC0B,QAAQ,EAAE3C,MAAM,KAAK,EAAG;cAAAyB,QAAA,EAAC;YAElH;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UACT;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CACN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAChC,EAAA,CAzFQD,MAAM;AAAA+C,EAAA,GAAN/C,MAAM;AA2Ff,eAAeA,MAAM;;AAgBrmBA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AASA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACgB,CAAC;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,UAPiB;AASjB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAzBC;AAyBwB,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}